#!/bin/bash -xe
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
echo "
export OPENSKY_USERNAME=${opensky_username}
export OPENSKY_PASSWORD=${opensky_password}
export KAFKA_TOPIC_NAME=${kafka_topic_name}
export ZOOKEEPER_URL=${zookeeper_url}
export MSK_BOOTSTRAP_URL=${msk_bootstrap_url}" >> /etc/environment
yum update -y
yum install python3.7 java-1.8.0-openjdk-devel -y
yum erase awscli -y

cd /opt/
wget https://archive.apache.org/dist/kafka/2.4.0/kafka_2.12-2.4.0.tgz
tar -xzf kafka_2.12-2.4.0.tgz
mv kafka_2.12-2.4.0 kafka

cd /home/ec2-user
wget https://bootstrap.pypa.io/get-pip.py
python3.7 get-pip.py
pip3 install boto3
pip3 install awscli

cd /etc/ssl/certs
touch opensky.pem
openssl s_client -showcerts -servername opensky-network.org -connect opensky-network.org:443 </dev/null | openssl x509 -out opensky.pem
keytool -import -alias filename -keystore /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.*/jre/lib/security/cacerts -storepass changeit -noprompt -file /etc/ssl/certs/opensky.pem
CACERTS=$(readlink -f /usr/bin/java | sed "s:bin/java::")
CACERTS="${CACERTS}lib/security/cacerts"

cd /opt/					           
BASE_URL=$(wget -qO- https://nifi.apache.org/download.html | grep -Eo '(http|https)://[a-zA-Z0-9./?=_-]*' | grep -E 'bin.tar.gz' | head -1) 
NIFI_URL=$(wget $BASE_URL -qO- https://nifi.apache.org/download.html | grep -Eo '(http|https)://[a-zA-Z0-9./?=_-]*' | grep -E 'bin.tar.gz' | head -1)
NIFI_FILE=$(basename $NIFI_URL)
NIFI_DIR=$(echo $NIFI_FILE| awk -F-bin.tar.gz '{print $1}')
wget $NIFI_URL
sudo gunzip -c $NIFI_FILE | sudo tar xvf -
sudo mv $NIFI_DIR nifi
sudo ./nifi/bin/nifi.sh install
sudo ./nifi/bin/nifi.sh set-sensitive-properties-key "${nifi_sensitive_properties_key}"
sudo sed -i '/java.arg.3=/ s/=.*/=-Xmx8000m/' ./nifi/conf/bootstrap.conf
sudo rm -rf /opt/nifi/conf/flow.xml.gz
sudo wget -P /opt/nifi/conf/ https://raw.githubusercontent.com/piotsik/flights_analyser/main/flow.xml.gz
sudo ./nifi/bin/nifi.sh start
cp /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.*/jre/lib/security/cacerts /tmp/kafka.client.truststore.jks
echo "security.protocol=SSL" > /opt/kafka/config/client.properties
echo "ssl.truststore.location=/tmp/kafka.client.truststore.jks" >> /opt/kafka/config/client.properties

cd
sudo KAFKA_HEAP_OPTS="-Xms512m -Xmx1g" /opt/kafka/bin/kafka-topics.sh --create --zookeeper $ZOOKEEPER_URL --topic $KAFKA_TOPIC_NAME --replication-factor 2 --partitions 1